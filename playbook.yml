- hosts: localhost
  vars_files:
    - vars/all.yml
  vars:
    home: "{{ lookup('env', 'HOME') }}"
    user: "{{ lookup('env', 'USER') }}"
    docker_users:
      - "{{ user }}"

  vars_prompt:
  - name: "github_user"
    prompt: "What is your GitHub user name?"
    private: no
  - name: "github_email"
    prompt: "What is your GitHub e-mail?"
    private: no


  tasks:
    - name: Install a list of packages
      apt:
        name: "{{ apt_packages }}"
        state: latest
      become: true
      tags: apt

    - name: Get latest release of ripgrep
      uri:                                                               
        url: https://api.github.com/repos/BurntSushi/ripgrep/releases/latest
        return_content: true                                             
      register: json_reponse         

    - debug: msg="{{ json_reponse.json.assets[8].browser_download_url }}"                                    

    # get_url not downloading entire file
    - name: "Download ripgrep"
      command: wget "{{ json_reponse.json.assets[8].browser_download_url }}" -O /tmp/ripgrep_latest.deb

    - name: "Install ripgrep"
      apt:
        deb: /tmp/ripgrep_latest.deb
      become: true

    - name: "Download google-chrome"
      get_url:
        url: "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
        dest: /tmp/google-chrome-stable.deb

    - name: "Install google-chrome"
      apt:
        deb: /tmp/google-chrome-stable.deb
      become: true

    - name: "Install oh-my-zsh"
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        executable: /bin/bash
      ignore_errors: true # ignore chsh PAM auth error

    - name: "Install oh-my-zsh plugins and theme"
      git:
        repo: "{{ item.url }}"
        dest: "{{ item.dest }}"
      with_items:
        - { url: "https://github.com/zsh-users/zsh-syntax-highlighting.git", dest: "~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" }
        - { url: "https://github.com/zsh-users/zsh-autosuggestions", dest: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"  }
        - { url: "https://github.com/junegunn/fzf.git", dest: "~/.fzf" }
        - { url: "https://github.com/bhilburn/powerlevel9k.git", dest: "~/.oh-my-zsh/custom/themes/powerlevel9k" }

    - name: "Install fzf"
      shell: ~/.fzf/install

    - name: "Configure zshrc"
      template: 
        src: templates/zshrc
        dest: "{{ home }}/.zshrc"
      tags: zshrc

    - name: "Download Powerline Fonts"
      git:
        repo: https://github.com/powerline/fonts.git
        dest: /tmp/fonts
        depth: 1
      register: plf
      tags: fonts

    - name: "Install Powerline Fonts"
      shell: /tmp/fonts/install.sh
      when: plf.changed
      tags: fonts

    - name: Create directories
      file:
        path: "{{ item.path }}"
        state: directory
      with_items:
        - { path: ~/.config/terminator }
        - { path: ~/git }
      tags: dirs

    - name: "Configure terminator"
      copy:
        src: files/terminator-config
        dest: ~/.config/terminator/config
      tags: terminator
    - name: "Configure Weechat"
      copy:
        src: files/irc.conf
        dest: ~/.weechat/irc.conf
      tags: weechat

    - name: "Configure Git"
      copy:
        src: "{{ item.src }}" 
        dest: "{{ item.dest }}"
      with_items:
        - { src: files/git-ignore, dest: ~/.gitignore }
      tags: git

    - name: "Copy gitconfig"
      template: 
        src: templates/git-config
        dest: ~/.gitconfig
      tags: gitconfig
        
    - name: "Get the ultimate vim configuration"
      git:
        repo: https://github.com/amix/vimrc.git
        dest: ~/.vim_runtime
        depth: 1
      register: uvim

    - name: "Install the ultimate vim configuration"
      shell: sh ~/.vim_runtime/install_basic_vimrc.sh
      when: uvim.changed

    - name: Install pip packages
      include_role:
        name: pip
      tags: pip

    - name: "Create a 2048-bit SSH key for {{ user }}"
      user:
        name: "{{ user }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: ~/.ssh/id_rsa
      tags: keypair

# go is not yet available to the current shell
    # - name: Download and install the aws-iam-authenticator binary
    #   command: go get -u -v github.com/kubernetes-sigs/aws-iam-authenticator/cmd/aws-iam-authenticator
    #   tags: eks

    # - name: Go get Kompose
    #   command: go get -u github.com/kubernetes/kompose
    #   tags: kompose

    # - name: Download diff-so-fancy # maybe later
    #   get_url:
    #     url: https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy
    #     dest: "{{ home }}/.local/bin/diff-so-fancy"
    #     mode: +x
    #   tags: diff

    - name: Set Wallpaper so we know we're done!
      command: gsettings set org.gnome.desktop.background picture-uri file:///usr/share/backgrounds/'Mr. Lee.jpg'

# These get loaded first so might need to include_role instead
  roles:
    - { role: vscode, tags: vscode }
    - { role: docker, become: yes, tags: docker }
    - { role: kubectl, tags: kubectl }
    - { role: minikube, tags: minikube }
    - { role: terraform, become: true, tags: terraform }
    - { role: vagrant, become: true, tags: vagrant }
    - { role: golang, sansible_golang_tarball: go1.11.1.linux-amd64.tar.gz, sansible_golang_tarball_checksum: 2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993, sansible_golang_workspace_user: "{{ user }}", tags: golang }
    - { role: helm, tags: helm }
